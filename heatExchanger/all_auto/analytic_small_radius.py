import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
from scipy.interpolate import griddata
from mpl_toolkits import mplot3d

c2_step5 = {
    '_0_15_0': 585.5048, '_5_10_0': 584.1761, '_0_20_0': 577.1628, '_0_10_0': 583.6852,
    '_5_5_0': 562.9895, '_5_0_0': 562.7721, '_0_5_0': 579.1131, '_0_0_0': 539.324,
    '_5_15_0': 591.6144, '_5_20_0': 583.2739, '_10_15_0': 584.7373, '_10_0_0': 563.6424,
    '_10_5_0': 582.0925, '_10_20_0': 581.5942, '_10_10_0': 559.5708, '_15_0_0': 565.4949,
    '_15_5_0': 592.119, '_15_10_0': 586.5384, '_15_20_0': 575.8437, '_20_5_0': 583.2411,
    '_15_15_0': 565.3651, '_20_0_0': 555.4807, '_20_10_0': 583.7549, '_20_15_0': 580.8432,
    '_20_20_0': 552.2582
}

c2_step2 = {'_2_10_0': 592.2331, '_4_20_0': 584.1757, '_4_12_0': 591.6297, '_2_18_0': 594.245, '_0_8_0': 586.0492, '_0_16_0': 586.2392, '_6_6_0': 561.816, '_4_4_0': 557.5673, '_2_2_0': 548.4951, '_0_0_0': 539.324, '_4_14_0': 591.3759, '_2_12_0': 593.966, '_0_18_0': 588.6191, '_0_10_0': 583.6852, '_2_20_0': 585.8463, '_6_0_0': 562.7714, '_2_4_0': 547.9065, '_6_10_0': 578.5045, '_0_4_0': 568.764, '_4_8_0': 580.6867, '_4_16_0': 591.8387, '_2_14_0': 594.4623, '_0_12_0': 587.1324, '_0_20_0': 577.1628, '_4_0_0': 557.2057,
            '_6_12_0': 592.2286, '_2_6_0': 582.1724, '_4_10_0': 590.2932, '_0_6_0': 586.7889, '_4_18_0': 591.8566, '_2_16_0': 596.6362, '_0_14_0': 584.5476, '_6_14_0': 590.2864, '_8_0_0': 564.4865, '_2_8_0': 596.2192, '_8_16_0': 589.7961, '_10_18_0': 592.141, '_8_8_0': 561.0454, '_12_4_0': 581.0592, '_10_10_0': 559.5708, '_10_4_0': 581.4954, '_6_16_0': 589.9256, '_12_12_0': 558.7838, '_12_20_0': 585.5458, '_8_18_0': 589.9128, '_10_20_0': 581.5942, '_12_6_0': 587.7699, '_6_18_0': 590.6289,
            '_8_4_0': 571.2424, '_10_6_0': 579.5469, '_8_12_0': 581.1403, '_12_14_0': 546.6615, '_10_14_0': 578.9603, '_14_0_0': 562.0582, '_8_20_0': 584.9852, '_12_8_0': 579.843, '_12_0_0': 562.6973, '_6_20_0': 586.817, '_8_14_0': 590.0848, '_12_16_0': 579.3181, '_14_6_0': 591.1312, '_10_16_0': 590.9997, '_14_14_0': 559.8955, '_14_4_0': 580.3541, '_10_0_0': 563.6424, '_16_8_0': 591.4895, '_16_0_0': 565.4299, '_16_16_0': 563.041, '_12_18_0': 588.8374, '_14_8_0': 588.9049, '_18_4_0': 581.5937, '_18_10_0': 591.3369,
            '_18_18_0': 561.5142, '_20_4_0': 573.2034, '_16_10_0': 587.9833, '_20_12_0': 584.2454, '_14_10_0': 577.6532, '_14_18_0': 580.7847, '_18_6_0': 589.9294, '_18_12_0': 589.9264, '_16_4_0': 580.9117, '_20_6_0': 582.4591, '_16_12_0': 581.6998, '_16_20_0': 571.6073, '_20_14_0': 582.5048, '_20_0_0': 555.4807, '_14_20_0': 581.7856, '_18_8_0': 590.4521, '_16_6_0': 589.8147, '_20_8_0': 586.3108, '_18_14_0': 566.7373, '_20_20_0': 552.2582, '_20_16_0': 571.7226, '_18_0_0': 564.7036, '_20_10_0': 583.7549}

c2_step1 = {'_2_18_0': 594.245, '_4_12_0': 591.6297, '_0_12_0': 587.1324, '_3_9_0': 591.4453, '_1_15_0': 592.9021, '_2_6_0': 582.1724, '_4_0_0': 557.2057, '_0_0_0': 539.324, '_1_4_0': 569.1638, '_5_5_0': 562.9895, '_4_13_0': 591.2746, '_3_10_0': 593.0333, '_1_16_0': 591.9712, '_0_13_0': 584.2911, '_2_19_0': 584.3574, '_2_7_0': 593.9038, '_1_5_0': 576.9594, '_4_14_0': 591.3759, '_3_11_0': 592.308, '_1_17_0': 594.3434, '_0_3_0': 556.7628, '_0_14_0': 584.5476, '_4_4_0': 557.5673, '_2_8_0': 596.2192, '_2_20_0': 585.8463,
            '_5_8_0': 576.9006, '_1_6_0': 589.7226, '_3_12_0': 590.7451, '_4_15_0': 588.3868, '_1_18_0': 592.1229, '_0_15_0': 585.5048, '_2_9_0': 595.9956, '_0_4_0': 568.764, '_5_9_0': 586.4053, '_3_0_0': 553.3055, '_3_13_0': 591.2368, '_4_16_0': 591.8387, '_4_7_0': 578.2617, '_1_7_0': 589.8142, '_0_16_0': 586.2392, '_2_10_0': 592.2331, '_1_19_0': 584.2093, '_5_10_0': 584.1761, '_0_5_0': 579.1131, '_3_14_0': 593.1608, '_4_17_0': 594.5502, '_4_8_0': 580.6867, '_1_8_0': 591.6142, '_3_3_0': 556.4291, '_2_11_0': 595.8277,
            '_0_17_0': 587.9549, '_1_20_0': 585.7412, '_5_11_0': 588.4453, '_0_6_0': 586.7889, '_3_15_0': 590.9651, '_4_18_0': 591.8566, '_4_9_0': 588.2598, '_1_9_0': 592.7874, '_2_12_0': 593.966, '_0_18_0': 588.6191, '_5_12_0': 590.5903, '_3_6_0': 575.6601, '_0_7_0': 587.8309, '_3_16_0': 590.3813, '_4_10_0': 590.2932, '_2_2_0': 548.4951, '_4_19_0': 579.8642, '_2_13_0': 593.4527, '_1_10_0': 593.2327, '_5_13_0': 593.2007, '_0_19_0': 578.5579, '_3_17_0': 597.0712, '_0_8_0': 586.0492, '_3_7_0': 582.836, '_4_11_0': 590.3702,
            '_4_20_0': 584.1757, '_2_14_0': 594.4623, '_1_11_0': 589.9462, '_2_4_0': 548.2847, '_5_14_0': 589.935, '_0_20_0': 577.1628, '_3_18_0': 593.1164, '_3_8_0': 590.4639, '_5_15_0': 591.6144, '_2_15_0': 595.2356, '_1_12_0': 592.9655, '_0_9_0': 577.5941, '_5_0_0': 562.7721, '_2_5_0': 577.2986, '_6_6_0': 561.816, '_6_18_0': 590.6289, '_3_19_0': 584.5669, '_5_16_0': 590.4113, '_2_16_0': 596.6362, '_1_13_0': 589.5029, '_0_10_0': 583.6852, '_7_10_0': 574.3935, '_8_0_0': 564.4865, '_8_12_0': 581.1403, '_3_20_0': 584.1072,
            '_5_17_0': 594.6571, '_6_19_0': 584.1808, '_2_17_0': 597.6223, '_6_9_0': 573.6733, '_1_14_0': 592.6612, '_0_11_0': 584.5874, '_7_11_0': 581.3386, '_8_13_0': 585.6963, '_5_18_0': 589.264, '_9_3_0': 576.4324, '_6_20_0': 586.817, '_9_15_0': 592.9862, '_6_10_0': 578.5045, '_10_6_0': 579.5469, '_8_3_0': 573.1587, '_10_18_0': 592.141, '_7_12_0': 584.6062, '_8_14_0': 590.0848, '_9_4_0': 576.1945, '_5_19_0': 581.9901, '_9_16_0': 593.314, '_7_0_0': 566.8848, '_6_11_0': 587.5306, '_8_4_0': 571.2424, '_10_7_0': 571.6932,
            '_10_19_0': 583.296, '_7_13_0': 592.127, '_8_15_0': 592.0216, '_9_17_0': 594.1111, '_9_5_0': 579.9691, '_5_20_0': 583.2739, '_6_12_0': 592.2286, '_7_14_0': 593.8207, '_10_20_0': 581.5942, '_8_5_0': 572.3803, '_8_16_0': 589.7961, '_7_3_0': 564.8365, '_9_18_0': 590.8418, '_6_13_0': 592.9872, '_10_10_0': 559.5708, '_9_6_0': 574.6231, '_6_0_0': 562.7714, '_7_15_0': 591.7373, '_8_17_0': 596.0712, '_11_0_0': 564.7605, '_7_4_0': 565.3143, '_6_14_0': 590.2864, '_9_19_0': 583.0721, '_8_8_0': 561.0454, '_7_16_0': 590.6022,
            '_8_18_0': 589.9128, '_10_13_0': 571.1306, '_9_9_0': 564.9865, '_6_15_0': 589.4987, '_6_3_0': 563.0315, '_9_20_0': 583.3112, '_11_3_0': 575.5786, '_7_7_0': 564.3971, '_7_17_0': 594.69, '_8_19_0': 584.2554, '_10_14_0': 578.9603, '_8_11_0': 571.7331, '_9_11_0': 555.3677, '_6_16_0': 589.9256, '_10_0_0': 563.6424, '_11_4_0': 581.338, '_7_18_0': 590.1929, '_8_20_0': 584.9852, '_10_15_0': 584.7373, '_12_0_0': 562.6973, '_12_12_0': 558.7838, '_6_17_0': 593.4165, '_9_12_0': 573.2953, '_11_11_0': 563.9754, '_11_5_0': 589.4734,
            '_7_19_0': 585.3248, '_10_16_0': 590.9997, '_10_3_0': 579.7349, '_13_3_0': 580.4856, '_9_13_0': 582.1654, '_12_14_0': 546.6615, '_11_6_0': 589.3504, '_12_3_0': 576.4604, '_9_0_0': 555.5031, '_7_20_0': 586.1845, '_10_17_0': 592.5929, '_10_4_0': 581.4954, '_13_4_0': 581.2821, '_9_14_0': 583.8928, '_11_14_0': 571.7244, '_11_7_0': 583.8139, '_12_15_0': 573.4517, '_12_4_0': 581.0592, '_14_6_0': 591.1312, '_14_18_0': 580.7847, '_13_15_0': 511.0166, '_10_5_0': 582.0925, '_15_9_0': 592.2908, '_13_5_0': 594.358, '_11_15_0': 583.5795,
            '_12_16_0': 579.3181, '_11_8_0': 571.4147, '_12_5_0': 589.895, '_14_7_0': 589.4742, '_13_16_0': 574.7697, '_14_19_0': 577.9582, '_15_10_0': 586.5384, '_13_6_0': 588.7343, '_16_0_0': 565.4299, '_11_16_0': 580.6239, '_16_12_0': 581.6998, '_12_6_0': 587.7699, '_12_17_0': 588.0029, '_14_8_0': 588.9049, '_13_17_0': 581.3218, '_14_20_0': 581.7856, '_15_11_0': 584.0152, '_13_7_0': 590.8449, '_11_17_0': 590.9565, '_12_7_0': 586.3767, '_16_13_0': 572.234, '_12_18_0': 588.8374, '_14_9_0': 585.8988, '_13_18_0': 586.0144, '_16_3_0': 575.8066,
            '_15_0_0': 565.4949, '_13_8_0': 585.34, '_11_18_0': 590.6911, '_15_12_0': 572.6942, '_12_8_0': 579.843, '_12_19_0': 584.0814, '_16_16_0': 563.041, '_14_10_0': 577.6532, '_16_4_0': 580.9117, '_13_9_0': 580.2742, '_13_19_0': 580.2298, '_11_19_0': 587.0316, '_12_9_0': 573.3766, '_12_20_0': 585.5458, '_15_15_0': 565.3651, '_15_3_0': 573.9036, '_14_11_0': 571.778, '_16_5_0': 589.4856, '_13_10_0': 570.8815, '_13_20_0': 587.5563, '_11_20_0': 586.824, '_15_4_0': 581.1044, '_13_0_0': 561.9685, '_15_18_0': 574.4945, '_16_6_0': 589.8147, '_16_19_0': 567.5546,
            '_14_0_0': 562.0582, '_17_3_0': 578.0875, '_15_5_0': 592.119, '_13_13_0': 564.7425, '_16_7_0': 594.6324, '_14_14_0': 559.8955, '_17_17_0': 567.202, '_15_19_0': 569.1578, '_16_20_0': 571.6073, '_17_4_0': 585.4376, '_18_6_0': 589.9294, '_15_6_0': 592.0638, '_14_3_0': 576.5328, '_16_8_0': 591.4895, '_18_18_0': 561.5142, '_15_20_0': 575.8437, '_17_0_0': 563.7009, '_17_5_0': 594.3424, '_18_7_0': 590.2626, '_15_7_0': 594.0262, '_14_4_0': 580.3541, '_16_9_0': 591.8721, '_17_20_0': 569.7946, '_14_17_0': 573.9556, '_19_9_0': 588.5401, '_18_8_0': 590.4521, '_15_8_0': 593.1239,
            '_17_6_0': 593.3986, '_19_0_0': 560.3257, '_14_5_0': 590.695, '_16_10_0': 587.9833, '_20_12_0': 584.2454, '_20_0_0': 555.4807, '_18_0_0': 564.7036, '_19_10_0': 591.9918, '_17_7_0': 597.3373, '_18_9_0': 590.8825, '_16_11_0': 585.3279, '_20_13_0': 588.084, '_19_11_0': 590.1204, '_19_3_0': 575.4466, '_18_10_0': 591.3369, '_17_8_0': 593.346, '_18_3_0': 573.8966, '_20_3_0': 568.4916, '_20_14_0': 582.5048, '_19_12_0': 589.4827, '_18_11_0': 591.8753, '_19_4_0': 580.8105, '_17_9_0': 597.2022, '_18_4_0': 581.5937, '_20_4_0': 573.2034, '_20_15_0': 580.8432, '_19_13_0': 589.5415,
            '_17_10_0': 594.064, '_18_12_0': 589.9264, '_19_5_0': 588.9207, '_18_5_0': 587.2673, '_20_5_0': 583.2411, '_20_16_0': 571.7226, '_17_11_0': 594.7068, '_19_14_0': 583.1613, '_18_13_0': 585.7278, '_19_6_0': 587.4305, '_20_6_0': 582.4591, '_17_12_0': 587.1567, '_20_17_0': 568.2903, '_19_15_0': 578.7923, '_19_7_0': 589.4285, '_18_14_0': 566.7373, '_20_7_0': 586.9265, '_17_13_0': 581.5009, '_19_8_0': 590.9806, '_19_16_0': 570.4775, '_20_20_0': 552.2582, '_18_15_0': 571.6524, '_20_8_0': 586.3108, '_17_14_0': 572.5199, '_20_9_0': 583.798, '_19_19_0': 558.0103, '_20_10_0': 583.7549, '_20_11_0': 587.238}

data = c2_step1

data = dict(sorted(data.items(), key=lambda item: item[1]))

print(data)

# Разделите ключи словаря на списки x, y и z
x, y, z = [], [], []
for key, value in data.items():
    parts = key.split('_')
    x.append(int(parts[1]))
    y.append(int(parts[2]))
    z.append(value)

# Задайте точки для интерполяции
x_new = 6
y_new = 6

# Используйте интерполяцию для получения значения в новой точке
z_new = griddata((x, y), z, (x_new, y_new), method='linear')

print(
    f'Значение интерполированной функции в точке ({x_new}, {y_new}): {z_new}')

# Создайте 3D график
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

# Постройте детальную поверхность
xi = np.linspace(min(x), max(x), 100)
yi = np.linspace(min(y), max(y), 100)
xi, yi = np.meshgrid(xi, yi)
zi = griddata((x, y), z, (xi, yi), method='linear')

ax.plot_surface(xi, yi, zi, cmap='viridis')

# Добавьте точки данных
# ax.scatter(x, y, z, c='r', marker='o')

# Настройте подписи осей
# ax.set_xlabel('Сдвиг первого цилиндра')
# ax.set_ylabel('Сдвиг второго цилиндра')
# ax.set_zlabel('Максимальная температура')

# Отобразите график
# plt.show()

c3_step5 = {'_5_10_5': 589.1054, '_0_15_5': 591.7809, '_5_0_15': 588.0503, '_0_5_15': 588.8533, '_5_5_10': 568.4172, '_0_10_10': 562.2675, '_0_20_0': 577.1628, '_0_20_20': 554.6064, '_0_0_20': 557.5479, '_0_0_0': 539.324, '_5_10_10': 565.474, '_0_5_20': 583.7809, '_5_0_20': 584.9669, '_5_5_15': 575.4959, '_0_10_15': 584.7115, '_0_20_5': 586.0291, '_5_0_0': 562.7721, '_0_5_0': 579.1131, '_0_15_10': 580.4888, '_0_0_5': 561.3409, '_5_10_15': 590.3759, '_0_10_20': 586.7011, '_5_5_20': 570.3829, '_0_20_10': 584.5334, '_0_10_0': 583.6852, '_5_5_0': 562.9895, '_5_0_5': 590.6313, '_0_15_15': 564.4317, '_0_5_5': 561.2845,
            '_0_0_10': 563.0297, '_5_10_20': 592.0074, '_5_10_0': 584.1761, '_0_15_0': 585.5048, '_0_20_15': 579.6007, '_0_10_5': 589.1989, '_5_5_5': 548.4949, '_5_0_10': 590.1141, '_0_15_20': 577.7682, '_0_5_10': 584.3544, '_5_15_0': 591.6144, '_0_0_15': 563.0734, '_10_0_10': 592.8701, '_5_20_15': 587.4534, '_5_15_20': 588.3235, '_10_5_5': 565.5594, '_10_10_0': 559.5708, '_10_10_20': 563.6785, '_10_20_10': 598.5621, '_10_15_15': 564.9993, '_5_15_5': 604.5745, '_15_0_5': 592.4737, '_10_0_15': 594.7498, '_5_20_20': 561.3189, '_5_20_0': 583.2739, '_10_5_10': 591.8539, '_10_15_0': 584.7373, '_10_10_5': 566.8672,
            '_10_20_15': 590.1362, '_5_15_10': 596.8134, '_10_15_20': 582.5808, '_15_0_10': 592.4027, '_10_0_20': 586.0736, '_5_20_5': 593.7732, '_10_5_15': 596.4486, '_10_0_0': 563.6424, '_10_15_5': 598.2445, '_10_20_20': 563.1682, '_10_10_10': 543.4987, '_5_15_15': 570.8689, '_15_0_15': 598.903, '_10_20_0': 581.5942, '_10_5_0': 582.0925, '_5_20_10': 592.0477, '_10_5_20': 590.0642, '_10_0_5': 590.8066, '_10_15_10': 593.5442, '_15_0_20': 593.7228, '_15_5_0': 592.119, '_10_10_15': 564.6799, '_10_20_5': 597.0355, '_15_0_0': 565.4949, '_15_10_15': 592.5439, '_15_5_20': 601.0745, '_15_15_10': 572.7441, '_15_20_5': 590.2394,
            '_15_5_5': 571.664, '_20_5_15': 592.6138, '_20_0_0': 555.4807, '_20_15_5': 590.1911, '_20_0_20': 584.4684, '_20_10_10': 563.0975, '_15_10_20': 590.4528, '_15_10_0': 586.5384, '_15_15_15': 545.8635, '_15_20_10': 591.6551, '_15_5_10': 598.9575, '_20_0_5': 582.813, '_20_15_10': 584.222, '_20_5_20': 589.5779, '_20_5_0': 583.2411, '_20_10_15': 591.0749, '_15_10_5': 589.7773, '_15_15_0': 565.3651, '_15_20_15': 588.6985, '_15_15_20': 565.4232, '_15_5_15': 606.1925, '_20_0_10': 583.9243, '_20_15_15': 558.9896, '_20_10_0': 583.7549, '_20_10_20': 587.1147, '_20_5_5': 562.283, '_15_15_5': 576.1166, '_15_10_10': 563.669,
            '_15_20_0': 575.8437, '_15_20_20': 561.4645, '_20_20_0': 552.2582, '_20_10_5': 590.0923, '_20_15_20': 577.6565, '_20_15_0': 580.8432, '_20_5_10': 589.161, '_20_0_15': 577.2534, '_20_20_20': 537.9114, '_20_20_5': 560.333, '_20_20_10': 561.16, '_20_20_15': 557.1572}


data = c3_step5

data = dict(sorted(data.items(), key=lambda item: item[1]))

print(data)

# Разделите ключи словаря на списки x, y и z
x, y, z, u = [], [], [], []
for key, value in data.items():
    parts = key.split('_')
    x.append(int(parts[1]))
    y.append(int(parts[2]))
    z.append(int(parts[2]))
    u.append(value)

# Creating figure
fig = plt.figure(figsize=(16, 9))
ax = plt.axes(projection="3d")

# Add x, y gridlines
ax.grid(b=True, color='grey',
        linestyle='-.', linewidth=0.3,
        alpha=0.2)


# Creating color map
my_cmap = plt.get_cmap('hsv')

# Creating plot
sctt = ax.scatter3D(x, y, z,
                    alpha=0.8,
                    c=u,
                    cmap=my_cmap,
                    marker='^')

plt.title("simple 3D scatter plot")
ax.set_xlabel('X-axis', fontweight='bold')
ax.set_ylabel('Y-axis', fontweight='bold')
ax.set_zlabel('Z-axis', fontweight='bold')
fig.colorbar(sctt, ax=ax, shrink=0.5, aspect=5)

# show plot
plt.show()
